{"ast":null,"code":"var _jsxFileName = \"F:\\\\manufacturer-website-client-side-MuhammadBorhan-main\\\\src\\\\pages\\\\Dashboard\\\\AllUsers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useQuery } from 'react-query';\nimport Loading from '../Loading/Loading';\nimport RowUser from './RowUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllUsers = () => {\n  _s();\n\n  // const [allusers, setAllusers] = useState([]);\n  // useEffect(() => {\n  //     const url = `http://localhost:5000/user`;\n  //     fetch(url)\n  //         .then(res => res.json())\n  //         .then(data => setAllusers(data))\n  // }, []);\n  const {\n    data: allusers,\n    isLoading,\n    refetch\n  } = useQuery('allusers', () => fetch('http://localhost:5000/user', {\n    method: 'GET',\n    headers: {\n      'authorization': `Bearer ${localStorage.getItem('accessToken')}`\n    }\n  }).then(res => res.json()));\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"mt-5 mb-3 text-center text-green-600 text-3xl font-bold\",\n      children: [\"Total users: \", allusers.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          class: \"table w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Make Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: allusers.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 84\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 57\n            }, this) : allusers.map((user, index) => /*#__PURE__*/_jsxDEV(RowUser, {\n              user: user,\n              index: index,\n              refetch: refetch\n            }, user._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 140\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AllUsers, \"YdCkQJJ18X+5R833jz554bdFABk=\", false, function () {\n  return [useQuery];\n});\n\n_c = AllUsers;\nexport default AllUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllUsers\");","map":{"version":3,"names":["React","useEffect","useState","useQuery","Loading","RowUser","AllUsers","data","allusers","isLoading","refetch","fetch","method","headers","localStorage","getItem","then","res","json","length","map","user","index","_id"],"sources":["F:/manufacturer-website-client-side-MuhammadBorhan-main/src/pages/Dashboard/AllUsers.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useQuery } from 'react-query';\nimport Loading from '../Loading/Loading';\nimport RowUser from './RowUser';\n\nconst AllUsers = () => {\n    // const [allusers, setAllusers] = useState([]);\n    // useEffect(() => {\n    //     const url = `http://localhost:5000/user`;\n    //     fetch(url)\n    //         .then(res => res.json())\n    //         .then(data => setAllusers(data))\n\n    // }, []);\n    const { data: allusers, isLoading, refetch } = useQuery('allusers', () => fetch('http://localhost:5000/user', {\n        method: 'GET',\n        headers: {\n            'authorization': `Bearer ${localStorage.getItem('accessToken')}`\n        }\n    }).then(res => res.json()))\n    if (isLoading) {\n        return <Loading></Loading>\n    }\n\n    return (\n        <div>\n            <h4 className='mt-5 mb-3 text-center text-green-600 text-3xl font-bold'>Total users: {allusers.length}</h4>\n\n            <div>\n                <div class=\"overflow-x-auto\">\n                    <table class=\"table w-full\">\n                        <thead>\n                            <tr>\n                                <th></th>\n                                <th>User</th>\n                                <th>Make Admin</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                allusers.length === 0 ? <p className='text-center'><Loading></Loading></p> : allusers.map((user, index) => <RowUser key={user._id} user={user} index={index} refetch={refetch}></RowUser>)\n                            }\n\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default AllUsers;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACnB;EACA;EACA;EACA;EACA;EACA;EAEA;EACA,MAAM;IAAEC,IAAI,EAAEC,QAAR;IAAkBC,SAAlB;IAA6BC;EAA7B,IAAyCP,QAAQ,CAAC,UAAD,EAAa,MAAMQ,KAAK,CAAC,4BAAD,EAA+B;IAC1GC,MAAM,EAAE,KADkG;IAE1GC,OAAO,EAAE;MACL,iBAAkB,UAASC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAoC;IAD1D;EAFiG,CAA/B,CAAL,CAKvEC,IALuE,CAKlEC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAL2D,CAAnB,CAAvD;;EAMA,IAAIT,SAAJ,EAAe;IACX,oBAAO,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QAAP;EACH;;EAED,oBACI;IAAA,wBACI;MAAI,SAAS,EAAC,yDAAd;MAAA,4BAAsFD,QAAQ,CAACW,MAA/F;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAGI;MAAA,uBACI;QAAK,KAAK,EAAC,iBAAX;QAAA,uBACI;UAAO,KAAK,EAAC,cAAb;UAAA,wBACI;YAAA,uBACI;cAAA,wBACI;gBAAA;gBAAA;gBAAA;cAAA,QADJ,eAEI;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAFJ,eAGI;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAHJ;YAAA;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA,QADJ,eAQI;YAAA,UAEQX,QAAQ,CAACW,MAAT,KAAoB,CAApB,gBAAwB;cAAG,SAAS,EAAC,aAAb;cAAA,uBAA2B,QAAC,OAAD;gBAAA;gBAAA;gBAAA;cAAA;YAA3B;cAAA;cAAA;cAAA;YAAA,QAAxB,GAA6EX,QAAQ,CAACY,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,kBAAiB,QAAC,OAAD;cAAwB,IAAI,EAAED,IAA9B;cAAoC,KAAK,EAAEC,KAA3C;cAAkD,OAAO,EAAEZ;YAA3D,GAAcW,IAAI,CAACE,GAAnB;cAAA;cAAA;cAAA;YAAA,QAA9B;UAFrF;YAAA;YAAA;YAAA;UAAA,QARJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAyBH,CA5CD;;GAAMjB,Q;UAS6CH,Q;;;KAT7CG,Q;AA8CN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}